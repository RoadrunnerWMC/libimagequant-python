steps:
- task: UsePythonVersion@0
  displayName: 'Switch to Python version'
  inputs:
    versionSpec: '$(python.version)'
- script: python -m pip install --upgrade pip setuptools wheel
  displayName: 'Install pip, setuptools, wheel'
- script: pip install -r bindings/requirements.txt
  displayName: 'Install liq requirements.txt'
- script: |
    cd bindings
    python setup.py bdist_wheel
  displayName: 'Build with setuptools and cffi'
- script: pip install bindings/dist/*.whl
  displayName: 'Install wheel with pip (non-Windows)'
  condition: and(succeeded(), ne(variables['Agent.OS'], 'Windows_NT'))
- powershell: pip install $(ls bindings/dist/*.whl | % {$_.FullName})
  displayName: 'Install wheel with pip (Windows)'
  condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'))
- script: brew install libjpeg zlib
  displayName: 'Install libjpeg and zlib for Pillow (Mac)'
  condition: and(succeeded(), and(eq(variables['python.version'], 'pypy3'), eq(variables['Agent.OS'], 'Darwin')))
- script:
    pip install Pillow pytest pytest-cov
  displayName: 'Install Pillow and pytest'
- script: pytest tests --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
  displayName: 'Test with pytest (non- Win/PyPy)'
  condition: and(succeeded(), not(and(eq(variables['python.version'], 'pypy3'), eq(variables['Agent.OS'], 'Windows_NT'))))
- script: pytest tests --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html -p no:faulthandler
  displayName: 'Test with pytest (Win/PyPy)'
  condition: and(succeeded(), and(eq(variables['python.version'], 'pypy3'), eq(variables['Agent.OS'], 'Windows_NT')))
- task: PublishTestResults@2
  displayName: 'Publish test results'
  condition: succeededOrFailed()
  inputs:
    testResultsFiles: '**/test-*.xml'
    testRunTitle: 'Publish test results for Python $(python.version)'
- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage results'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'
- task: CopyFiles@2
  displayName: 'Copy artifacts to directory'
  inputs:
    sourceFolder: bindings/dist
    contents: '*.whl'
    targetFolder: $(Build.ArtifactStagingDirectory)
- task: PublishBuildArtifacts@1
  displayName: 'Publish artifacts'
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: drop